Terminals unused in grammar

    ERROR
    FLAG
    VAR
    QUOTE
    PLUSMINUS


State 12 conflicts: 4 shift/reduce
State 13 conflicts: 5 shift/reduce
State 15 conflicts: 2 shift/reduce
State 28 conflicts: 5 shift/reduce
State 64 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce
State 176 conflicts: 1 shift/reduce
State 177 conflicts: 1 shift/reduce
State 199 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: info objects
    2      | info table objects
    3      | table objects
    4      | objects
    5      | info

    6 info: INFO info_list

    7 info_list: ID info_list
    8          | DESC info_list
    9          | REAL info_list
   10          | ID
   11          | DESC
   12          | REAL

   13 objects: object_block
   14        | object_block objects
   15        | definitions
   16        | definitions objects

   17 definitions: definition
   18            | definition definitions
   19            | regions

   20 regions: region_block
   21        | region_block regions

   22 definition: DEFINE id ASSIGN condition
   23           | DEFINE id COLON condition
   24           | table

   25 table: TABLE ID TABLETYPE ID NVARS INT ERRORS boolean tablelist

   26 tablelist: value tablelist
   27          | value

   28 value: REAL

   29 function: id LPAR param_list RPAR
   30         | LCBRACE param_list RCBRACE id
   31         | PIPE int PIPE
   32         | PIPE real PIPE
   33         | PIPE id PIPE

   34 param_list: chain COMMA param_list
   35           | chain

   36 object_block: OBJECT id takes
   37             | OBJECT id takes criteria

   38 takes: take takes
   39      | take

   40 take: TAKE take_id
   41     | COLON take_id
   42     | TAKE UNION LPAR id COMMA id RPAR
   43     | COLON UNION LPAR id COMMA id RPAR

   44 take_id: id
   45        | id LPAR id_list RPAR
   46        | id id_list

   47 id_list: id_list_params
   48        | id_list_params COMMA id_list

   49 id_list_params: id
   50               | num

   51 region_block: REGION id criteria
   52             | HISTOLIST id criteria

   53 criteria: criterion criteria
   54         | criterion

   55 criterion: COMMAND chained_cond
   56          | HISTO id COMMA DESC comma_sep
   57          | id

   58 comma_sep: COMMA comma_sep
   59          | num comma_sep
   60          | id comma_sep
   61          | function comma_sep
   62          | LBRACKET bins RBRACKET comma_sep
   63          | num
   64          | id
   65          | LBRACKET bins RBRACKET
   66          | function

   67 bins: bins num
   68     | num

   69 chained_cond: LPAR chain RPAR
   70             | LPAR chain RPAR logic_op chained_cond
   71             | chain
   72             | chain QUES chain COLON chain
   73             | chain QUES chain
   74             | id range

   75 chain: condition
   76      | condition logic_op chain
   77      | not condition

   78 not: NOT

   79 condition: expr
   80          | expr compare_op condition
   81          | expr INCLUSIVE num num
   82          | expr EXCLUSIVE num num

   83 compare_op: GT
   84           | LT
   85           | GE
   86           | LE
   87           | EQ
   88           | NE

   89 logic_op: AND
   90         | OR

   91 expr: factor
   92     | factor expr_op expr

   93 expr_op: PLUS
   94        | SUBTRACT

   95 factor: term
   96       | term factor_op factor

   97 factor_op: MULTIPLY
   98          | DIVIDE
   99          | POW

  100 term: id_qualifiers
  101     | function
  102     | function dot_op
  103     | num
  104     | LPAR expr RPAR

  105 id_qualifiers: id_qualifier id_qualifiers
  106              | id_qualifier

  107 id_qualifier: dot_op
  108             | id
  109             | id LBRACKET index RBRACKET
  110             | id UNDERSCORE index COLON index
  111             | id UNDERSCORE index
  112             | id LBRACKET index COLON index RBRACKET

  113 dot_op: DOT id

  114 range: range num
  115      | num

  116 boolean: TRUE
  117        | FALSE

  118 num: int
  119    | real

  120 index: SUBTRACT INT
  121      | INT
  122      | Îµ

  123 int: INT

  124 real: REAL

  125 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DEFINE <std::string> (258) 22 23
    REGION <std::string> (259) 51
    OBJECT <std::string> (260) 36 37
    TAKE <std::string> (261) 40 42
    COMMAND <std::string> (262) 55
    HISTO <std::string> (263) 56
    HISTOLIST <std::string> (264) 52
    TABLE <std::string> (265) 25
    TABLETYPE <std::string> (266) 25
    NVARS <std::string> (267) 25
    ERRORS <std::string> (268) 25
    UNION <std::string> (269) 42 43
    ID <std::string> (270) 7 10 25 125
    ERROR <std::string> (271)
    FLAG <std::string> (272)
    LPAR <std::string> (273) 29 42 43 45 69 70 104
    RPAR <std::string> (274) 29 42 43 45 69 70 104
    VAR <std::string> (275)
    QUOTE <std::string> (276)
    DESC <std::string> (277) 8 11 56
    INFO <std::string> (278) 6
    PLUS <std::string> (279) 93
    SUBTRACT <std::string> (280) 94 120
    MULTIPLY <std::string> (281) 97
    DIVIDE <std::string> (282) 98
    POW <std::string> (283) 99
    ASSIGN <std::string> (284) 22
    PLUSMINUS <std::string> (285)
    GT <std::string> (286) 83
    LT <std::string> (287) 84
    GE <std::string> (288) 85
    LE <std::string> (289) 86
    EQ <std::string> (290) 87
    NE <std::string> (291) 88
    TRUE <std::string> (292) 116
    FALSE <std::string> (293) 117
    AND <std::string> (294) 89
    OR <std::string> (295) 90
    NOT <std::string> (296) 78
    PIPE <std::string> (297) 31 32 33
    LBRACKET <std::string> (298) 62 65 109 112
    RBRACKET <std::string> (299) 62 65 109 112
    LCBRACE <std::string> (300) 30
    RCBRACE <std::string> (301) 30
    COLON <std::string> (302) 23 41 43 72 110 112
    QUES <std::string> (303) 72 73
    COMMA <std::string> (304) 34 42 43 48 56 58
    DOT <std::string> (305) 113
    INCLUSIVE <std::string> (306) 81
    EXCLUSIVE <std::string> (307) 82
    UNDERSCORE <std::string> (308) 110 111
    INT <int> (309) 25 120 121 123
    REAL <double> (310) 9 12 28 124


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    start (57)
        on left: 1 2 3 4 5
        on right: 0
    info <std::string> (58)
        on left: 6
        on right: 1 2 5
    info_list (59)
        on left: 7 8 9 10 11 12
        on right: 6 7 8 9
    objects (60)
        on left: 13 14 15 16
        on right: 1 2 3 4 14 16
    definitions (61)
        on left: 17 18 19
        on right: 15 16 18
    regions (62)
        on left: 20 21
        on right: 19 21
    definition <adl::Expr*> (63)
        on left: 22 23 24
        on right: 17 18
    table <adl::Expr*> (64)
        on left: 25
        on right: 2 3 24
    tablelist <double> (65)
        on left: 26 27
        on right: 25 26
    value <double> (66)
        on left: 28
        on right: 26 27
    function <adl::Expr*> (67)
        on left: 29 30 31 32 33
        on right: 61 66 101 102
    param_list <adl::Expr*> (68)
        on left: 34 35
        on right: 29 30 34
    object_block <adl::Expr*> (69)
        on left: 36 37
        on right: 13 14
    takes (70)
        on left: 38 39
        on right: 36 37 38
    take <adl::Expr*> (71)
        on left: 40 41 42 43
        on right: 38 39
    take_id <adl::Expr*> (72)
        on left: 44 45 46
        on right: 40 41
    id_list <adl::Expr*> (73)
        on left: 47 48
        on right: 45 46 48
    id_list_params <adl::Expr*> (74)
        on left: 49 50
        on right: 47 48
    region_block <adl::Expr*> (75)
        on left: 51 52
        on right: 20 21
    criteria (76)
        on left: 53 54
        on right: 37 51 52 53
    criterion <adl::Expr*> (77)
        on left: 55 56 57
        on right: 53 54
    comma_sep (78)
        on left: 58 59 60 61 62 63 64 65 66
        on right: 56 58 59 60 61 62
    bins <std::vector<double>> (79)
        on left: 67 68
        on right: 62 65 67
    chained_cond <adl::Expr*> (80)
        on left: 69 70 71 72 73 74
        on right: 55 70
    chain <adl::Expr*> (81)
        on left: 75 76 77
        on right: 34 35 69 70 71 72 73 76
    not <adl::Expr*> (82)
        on left: 78
        on right: 77
    condition <adl::Expr*> (83)
        on left: 79 80 81 82
        on right: 22 23 75 76 77 80
    compare_op <std::string> (84)
        on left: 83 84 85 86 87 88
        on right: 80
    logic_op <std::string> (85)
        on left: 89 90
        on right: 70 76
    expr <adl::Expr*> (86)
        on left: 91 92
        on right: 79 80 81 82 92 104
    expr_op <std::string> (87)
        on left: 93 94
        on right: 92
    factor <adl::Expr*> (88)
        on left: 95 96
        on right: 91 92 96
    factor_op <std::string> (89)
        on left: 97 98 99
        on right: 96
    term <adl::Expr*> (90)
        on left: 100 101 102 103 104
        on right: 95 96
    id_qualifiers <adl::Expr*> (91)
        on left: 105 106
        on right: 100 105
    id_qualifier <adl::Expr*> (92)
        on left: 107 108 109 110 111 112
        on right: 105 106
    dot_op <adl::Expr*> (93)
        on left: 113
        on right: 102 107
    range <adl::Expr*> (94)
        on left: 114 115
        on right: 74 114
    boolean <bool> (95)
        on left: 116 117
        on right: 25
    num <adl::Expr*> (96)
        on left: 118 119
        on right: 50 59 63 67 68 81 82 103 114 115
    index <int> (97)
        on left: 120 121 122
        on right: 109 110 111 112
    int <adl::Expr*> (98)
        on left: 123
        on right: 31 118
    real <adl::Expr*> (99)
        on left: 124
        on right: 32 119
    id <adl::Expr*> (100)
        on left: 125
        on right: 22 23 29 30 33 36 37 42 43 44 45 46 49 51 52 56 57 60 64 74 108 109 110 111 112 113


State 0

    0 $accept: â¢ start $end

    DEFINE     shift, and go to state 1
    REGION     shift, and go to state 2
    OBJECT     shift, and go to state 3
    HISTOLIST  shift, and go to state 4
    TABLE      shift, and go to state 5
    INFO       shift, and go to state 6

    start         go to state 7
    info          go to state 8
    objects       go to state 9
    definitions   go to state 10
    regions       go to state 11
    definition    go to state 12
    table         go to state 13
    object_block  go to state 14
    region_block  go to state 15


State 1

   22 definition: DEFINE â¢ id ASSIGN condition
   23           | DEFINE â¢ id COLON condition

    ID  shift, and go to state 16

    id  go to state 17


State 2

   51 region_block: REGION â¢ id criteria

    ID  shift, and go to state 16

    id  go to state 18


State 3

   36 object_block: OBJECT â¢ id takes
   37             | OBJECT â¢ id takes criteria

    ID  shift, and go to state 16

    id  go to state 19


State 4

   52 region_block: HISTOLIST â¢ id criteria

    ID  shift, and go to state 16

    id  go to state 20


State 5

   25 table: TABLE â¢ ID TABLETYPE ID NVARS INT ERRORS boolean tablelist

    ID  shift, and go to state 21


State 6

    6 info: INFO â¢ info_list

    ID    shift, and go to state 22
    DESC  shift, and go to state 23
    REAL  shift, and go to state 24

    info_list  go to state 25


State 7

    0 $accept: start â¢ $end

    $end  shift, and go to state 26


State 8

    1 start: info â¢ objects
    2      | info â¢ table objects
    5      | info â¢

    DEFINE     shift, and go to state 1
    REGION     shift, and go to state 2
    OBJECT     shift, and go to state 3
    HISTOLIST  shift, and go to state 4
    TABLE      shift, and go to state 5

    $default  reduce using rule 5 (start)

    objects       go to state 27
    definitions   go to state 10
    regions       go to state 11
    definition    go to state 12
    table         go to state 28
    object_block  go to state 14
    region_block  go to state 15


State 9

    4 start: objects â¢

    $default  reduce using rule 4 (start)


State 10

   15 objects: definitions â¢
   16        | definitions â¢ objects

    DEFINE     shift, and go to state 1
    REGION     shift, and go to state 2
    OBJECT     shift, and go to state 3
    HISTOLIST  shift, and go to state 4
    TABLE      shift, and go to state 5

    $default  reduce using rule 15 (objects)

    objects       go to state 29
    definitions   go to state 10
    regions       go to state 11
    definition    go to state 12
    table         go to state 30
    object_block  go to state 14
    region_block  go to state 15


State 11

   19 definitions: regions â¢

    $default  reduce using rule 19 (definitions)


State 12

   17 definitions: definition â¢
   18            | definition â¢ definitions

    DEFINE     shift, and go to state 1
    REGION     shift, and go to state 2
    HISTOLIST  shift, and go to state 4
    TABLE      shift, and go to state 5

    DEFINE     [reduce using rule 17 (definitions)]
    REGION     [reduce using rule 17 (definitions)]
    HISTOLIST  [reduce using rule 17 (definitions)]
    TABLE      [reduce using rule 17 (definitions)]
    $default   reduce using rule 17 (definitions)

    definitions   go to state 31
    regions       go to state 11
    definition    go to state 12
    table         go to state 30
    region_block  go to state 15


State 13

    3 start: table â¢ objects
   24 definition: table â¢

    DEFINE     shift, and go to state 1
    REGION     shift, and go to state 2
    OBJECT     shift, and go to state 3
    HISTOLIST  shift, and go to state 4
    TABLE      shift, and go to state 5

    DEFINE     [reduce using rule 24 (definition)]
    REGION     [reduce using rule 24 (definition)]
    OBJECT     [reduce using rule 24 (definition)]
    HISTOLIST  [reduce using rule 24 (definition)]
    TABLE      [reduce using rule 24 (definition)]
    $default   reduce using rule 24 (definition)

    objects       go to state 32
    definitions   go to state 10
    regions       go to state 11
    definition    go to state 12
    table         go to state 30
    object_block  go to state 14
    region_block  go to state 15


State 14

   13 objects: object_block â¢
   14        | object_block â¢ objects

    DEFINE     shift, and go to state 1
    REGION     shift, and go to state 2
    OBJECT     shift, and go to state 3
    HISTOLIST  shift, and go to state 4
    TABLE      shift, and go to state 5

    $default  reduce using rule 13 (objects)

    objects       go to state 33
    definitions   go to state 10
    regions       go to state 11
    definition    go to state 12
    table         go to state 30
    object_block  go to state 14
    region_block  go to state 15


State 15

   20 regions: region_block â¢
   21        | region_block â¢ regions

    REGION     shift, and go to state 2
    HISTOLIST  shift, and go to state 4

    REGION     [reduce using rule 20 (regions)]
    HISTOLIST  [reduce using rule 20 (regions)]
    $default   reduce using rule 20 (regions)

    regions       go to state 34
    region_block  go to state 15


State 16

  125 id: ID â¢

    $default  reduce using rule 125 (id)


State 17

   22 definition: DEFINE id â¢ ASSIGN condition
   23           | DEFINE id â¢ COLON condition

    ASSIGN  shift, and go to state 35
    COLON   shift, and go to state 36


State 18

   51 region_block: REGION id â¢ criteria

    COMMAND  shift, and go to state 37
    HISTO    shift, and go to state 38
    ID       shift, and go to state 16

    criteria   go to state 39
    criterion  go to state 40
    id         go to state 41


State 19

   36 object_block: OBJECT id â¢ takes
   37             | OBJECT id â¢ takes criteria

    TAKE   shift, and go to state 42
    COLON  shift, and go to state 43

    takes  go to state 44
    take   go to state 45


State 20

   52 region_block: HISTOLIST id â¢ criteria

    COMMAND  shift, and go to state 37
    HISTO    shift, and go to state 38
    ID       shift, and go to state 16

    criteria   go to state 46
    criterion  go to state 40
    id         go to state 41


State 21

   25 table: TABLE ID â¢ TABLETYPE ID NVARS INT ERRORS boolean tablelist

    TABLETYPE  shift, and go to state 47


State 22

    7 info_list: ID â¢ info_list
   10          | ID â¢

    ID    shift, and go to state 22
    DESC  shift, and go to state 23
    REAL  shift, and go to state 24

    $default  reduce using rule 10 (info_list)

    info_list  go to state 48


State 23

    8 info_list: DESC â¢ info_list
   11          | DESC â¢

    ID    shift, and go to state 22
    DESC  shift, and go to state 23
    REAL  shift, and go to state 24

    $default  reduce using rule 11 (info_list)

    info_list  go to state 49


State 24

    9 info_list: REAL â¢ info_list
   12          | REAL â¢

    ID    shift, and go to state 22
    DESC  shift, and go to state 23
    REAL  shift, and go to state 24

    $default  reduce using rule 12 (info_list)

    info_list  go to state 50


State 25

    6 info: INFO info_list â¢

    $default  reduce using rule 6 (info)


State 26

    0 $accept: start $end â¢

    $default  accept


State 27

    1 start: info objects â¢

    $default  reduce using rule 1 (start)


State 28

    2 start: info table â¢ objects
   24 definition: table â¢

    DEFINE     shift, and go to state 1
    REGION     shift, and go to state 2
    OBJECT     shift, and go to state 3
    HISTOLIST  shift, and go to state 4
    TABLE      shift, and go to state 5

    DEFINE     [reduce using rule 24 (definition)]
    REGION     [reduce using rule 24 (definition)]
    OBJECT     [reduce using rule 24 (definition)]
    HISTOLIST  [reduce using rule 24 (definition)]
    TABLE      [reduce using rule 24 (definition)]
    $default   reduce using rule 24 (definition)

    objects       go to state 51
    definitions   go to state 10
    regions       go to state 11
    definition    go to state 12
    table         go to state 30
    object_block  go to state 14
    region_block  go to state 15


State 29

   16 objects: definitions objects â¢

    $default  reduce using rule 16 (objects)


State 30

   24 definition: table â¢

    $default  reduce using rule 24 (definition)


State 31

   18 definitions: definition definitions â¢

    $default  reduce using rule 18 (definitions)


State 32

    3 start: table objects â¢

    $default  reduce using rule 3 (start)


State 33

   14 objects: object_block objects â¢

    $default  reduce using rule 14 (objects)


State 34

   21 regions: region_block regions â¢

    $default  reduce using rule 21 (regions)


State 35

   22 definition: DEFINE id ASSIGN â¢ condition

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    condition      go to state 59
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 36

   23 definition: DEFINE id COLON â¢ condition

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    condition      go to state 70
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 37

   55 criterion: COMMAND â¢ chained_cond

    ID       shift, and go to state 16
    LPAR     shift, and go to state 71
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    chained_cond   go to state 73
    chain          go to state 74
    not            go to state 75
    condition      go to state 76
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 77


State 38

   56 criterion: HISTO â¢ id COMMA DESC comma_sep

    ID  shift, and go to state 16

    id  go to state 78


State 39

   51 region_block: REGION id criteria â¢

    $default  reduce using rule 51 (region_block)


State 40

   53 criteria: criterion â¢ criteria
   54         | criterion â¢

    COMMAND  shift, and go to state 37
    HISTO    shift, and go to state 38
    ID       shift, and go to state 16

    $default  reduce using rule 54 (criteria)

    criteria   go to state 79
    criterion  go to state 40
    id         go to state 41


State 41

   57 criterion: id â¢

    $default  reduce using rule 57 (criterion)


State 42

   40 take: TAKE â¢ take_id
   42     | TAKE â¢ UNION LPAR id COMMA id RPAR

    UNION  shift, and go to state 80
    ID     shift, and go to state 16

    take_id  go to state 81
    id       go to state 82


State 43

   41 take: COLON â¢ take_id
   43     | COLON â¢ UNION LPAR id COMMA id RPAR

    UNION  shift, and go to state 83
    ID     shift, and go to state 16

    take_id  go to state 84
    id       go to state 82


State 44

   36 object_block: OBJECT id takes â¢
   37             | OBJECT id takes â¢ criteria

    COMMAND  shift, and go to state 37
    HISTO    shift, and go to state 38
    ID       shift, and go to state 16

    $default  reduce using rule 36 (object_block)

    criteria   go to state 85
    criterion  go to state 40
    id         go to state 41


State 45

   38 takes: take â¢ takes
   39      | take â¢

    TAKE   shift, and go to state 42
    COLON  shift, and go to state 43

    $default  reduce using rule 39 (takes)

    takes  go to state 86
    take   go to state 45


State 46

   52 region_block: HISTOLIST id criteria â¢

    $default  reduce using rule 52 (region_block)


State 47

   25 table: TABLE ID TABLETYPE â¢ ID NVARS INT ERRORS boolean tablelist

    ID  shift, and go to state 87


State 48

    7 info_list: ID info_list â¢

    $default  reduce using rule 7 (info_list)


State 49

    8 info_list: DESC info_list â¢

    $default  reduce using rule 8 (info_list)


State 50

    9 info_list: REAL info_list â¢

    $default  reduce using rule 9 (info_list)


State 51

    2 start: info table objects â¢

    $default  reduce using rule 2 (start)


State 52

  104 term: LPAR â¢ expr RPAR

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    expr           go to state 88
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 53

   31 function: PIPE â¢ int PIPE
   32         | PIPE â¢ real PIPE
   33         | PIPE â¢ id PIPE

    ID    shift, and go to state 16
    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    int   go to state 89
    real  go to state 90
    id    go to state 91


State 54

   30 function: LCBRACE â¢ param_list RCBRACE id

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    param_list     go to state 92
    chain          go to state 93
    not            go to state 75
    condition      go to state 76
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 55

  113 dot_op: DOT â¢ id

    ID  shift, and go to state 16

    id  go to state 94


State 56

  123 int: INT â¢

    $default  reduce using rule 123 (int)


State 57

  124 real: REAL â¢

    $default  reduce using rule 124 (real)


State 58

  101 term: function â¢
  102     | function â¢ dot_op

    DOT  shift, and go to state 55

    $default  reduce using rule 101 (term)

    dot_op  go to state 95


State 59

   22 definition: DEFINE id ASSIGN condition â¢

    $default  reduce using rule 22 (definition)


State 60

   79 condition: expr â¢
   80          | expr â¢ compare_op condition
   81          | expr â¢ INCLUSIVE num num
   82          | expr â¢ EXCLUSIVE num num

    GT         shift, and go to state 96
    LT         shift, and go to state 97
    GE         shift, and go to state 98
    LE         shift, and go to state 99
    EQ         shift, and go to state 100
    NE         shift, and go to state 101
    INCLUSIVE  shift, and go to state 102
    EXCLUSIVE  shift, and go to state 103

    $default  reduce using rule 79 (condition)

    compare_op  go to state 104


State 61

   91 expr: factor â¢
   92     | factor â¢ expr_op expr

    PLUS      shift, and go to state 105
    SUBTRACT  shift, and go to state 106

    $default  reduce using rule 91 (expr)

    expr_op  go to state 107


State 62

   95 factor: term â¢
   96       | term â¢ factor_op factor

    MULTIPLY  shift, and go to state 108
    DIVIDE    shift, and go to state 109
    POW       shift, and go to state 110

    $default  reduce using rule 95 (factor)

    factor_op  go to state 111


State 63

  100 term: id_qualifiers â¢

    $default  reduce using rule 100 (term)


State 64

  105 id_qualifiers: id_qualifier â¢ id_qualifiers
  106              | id_qualifier â¢

    ID   shift, and go to state 16
    DOT  shift, and go to state 55

    ID        [reduce using rule 106 (id_qualifiers)]
    $default  reduce using rule 106 (id_qualifiers)

    id_qualifiers  go to state 112
    id_qualifier   go to state 64
    dot_op         go to state 65
    id             go to state 113


State 65

  107 id_qualifier: dot_op â¢

    $default  reduce using rule 107 (id_qualifier)


State 66

  103 term: num â¢

    $default  reduce using rule 103 (term)


State 67

  118 num: int â¢

    $default  reduce using rule 118 (num)


State 68

  119 num: real â¢

    $default  reduce using rule 119 (num)


State 69

   29 function: id â¢ LPAR param_list RPAR
  108 id_qualifier: id â¢
  109             | id â¢ LBRACKET index RBRACKET
  110             | id â¢ UNDERSCORE index COLON index
  111             | id â¢ UNDERSCORE index
  112             | id â¢ LBRACKET index COLON index RBRACKET

    LPAR        shift, and go to state 114
    LBRACKET    shift, and go to state 115
    UNDERSCORE  shift, and go to state 116

    $default  reduce using rule 108 (id_qualifier)


State 70

   23 definition: DEFINE id COLON condition â¢

    $default  reduce using rule 23 (definition)


State 71

   69 chained_cond: LPAR â¢ chain RPAR
   70             | LPAR â¢ chain RPAR logic_op chained_cond
  104 term: LPAR â¢ expr RPAR

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    chain          go to state 117
    not            go to state 75
    condition      go to state 76
    expr           go to state 118
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 72

   78 not: NOT â¢

    $default  reduce using rule 78 (not)


State 73

   55 criterion: COMMAND chained_cond â¢

    $default  reduce using rule 55 (criterion)


State 74

   71 chained_cond: chain â¢
   72             | chain â¢ QUES chain COLON chain
   73             | chain â¢ QUES chain

    QUES  shift, and go to state 119

    $default  reduce using rule 71 (chained_cond)


State 75

   77 chain: not â¢ condition

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    condition      go to state 120
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 76

   75 chain: condition â¢
   76      | condition â¢ logic_op chain

    AND  shift, and go to state 121
    OR   shift, and go to state 122

    $default  reduce using rule 75 (chain)

    logic_op  go to state 123


State 77

   29 function: id â¢ LPAR param_list RPAR
   74 chained_cond: id â¢ range
  108 id_qualifier: id â¢
  109             | id â¢ LBRACKET index RBRACKET
  110             | id â¢ UNDERSCORE index COLON index
  111             | id â¢ UNDERSCORE index
  112             | id â¢ LBRACKET index COLON index RBRACKET

    LPAR        shift, and go to state 114
    LBRACKET    shift, and go to state 115
    UNDERSCORE  shift, and go to state 116
    INT         shift, and go to state 56
    REAL        shift, and go to state 57

    $default  reduce using rule 108 (id_qualifier)

    range  go to state 124
    num    go to state 125
    int    go to state 67
    real   go to state 68


State 78

   56 criterion: HISTO id â¢ COMMA DESC comma_sep

    COMMA  shift, and go to state 126


State 79

   53 criteria: criterion criteria â¢

    $default  reduce using rule 53 (criteria)


State 80

   42 take: TAKE UNION â¢ LPAR id COMMA id RPAR

    LPAR  shift, and go to state 127


State 81

   40 take: TAKE take_id â¢

    $default  reduce using rule 40 (take)


State 82

   44 take_id: id â¢
   45        | id â¢ LPAR id_list RPAR
   46        | id â¢ id_list

    ID    shift, and go to state 16
    LPAR  shift, and go to state 128
    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    ID        [reduce using rule 44 (take_id)]
    $default  reduce using rule 44 (take_id)

    id_list         go to state 129
    id_list_params  go to state 130
    num             go to state 131
    int             go to state 67
    real            go to state 68
    id              go to state 132


State 83

   43 take: COLON UNION â¢ LPAR id COMMA id RPAR

    LPAR  shift, and go to state 133


State 84

   41 take: COLON take_id â¢

    $default  reduce using rule 41 (take)


State 85

   37 object_block: OBJECT id takes criteria â¢

    $default  reduce using rule 37 (object_block)


State 86

   38 takes: take takes â¢

    $default  reduce using rule 38 (takes)


State 87

   25 table: TABLE ID TABLETYPE ID â¢ NVARS INT ERRORS boolean tablelist

    NVARS  shift, and go to state 134


State 88

  104 term: LPAR expr â¢ RPAR

    RPAR  shift, and go to state 135


State 89

   31 function: PIPE int â¢ PIPE

    PIPE  shift, and go to state 136


State 90

   32 function: PIPE real â¢ PIPE

    PIPE  shift, and go to state 137


State 91

   33 function: PIPE id â¢ PIPE

    PIPE  shift, and go to state 138


State 92

   30 function: LCBRACE param_list â¢ RCBRACE id

    RCBRACE  shift, and go to state 139


State 93

   34 param_list: chain â¢ COMMA param_list
   35           | chain â¢

    COMMA  shift, and go to state 140

    $default  reduce using rule 35 (param_list)


State 94

  113 dot_op: DOT id â¢

    $default  reduce using rule 113 (dot_op)


State 95

  102 term: function dot_op â¢

    $default  reduce using rule 102 (term)


State 96

   83 compare_op: GT â¢

    $default  reduce using rule 83 (compare_op)


State 97

   84 compare_op: LT â¢

    $default  reduce using rule 84 (compare_op)


State 98

   85 compare_op: GE â¢

    $default  reduce using rule 85 (compare_op)


State 99

   86 compare_op: LE â¢

    $default  reduce using rule 86 (compare_op)


State 100

   87 compare_op: EQ â¢

    $default  reduce using rule 87 (compare_op)


State 101

   88 compare_op: NE â¢

    $default  reduce using rule 88 (compare_op)


State 102

   81 condition: expr INCLUSIVE â¢ num num

    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    num   go to state 141
    int   go to state 67
    real  go to state 68


State 103

   82 condition: expr EXCLUSIVE â¢ num num

    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    num   go to state 142
    int   go to state 67
    real  go to state 68


State 104

   80 condition: expr compare_op â¢ condition

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    condition      go to state 143
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 105

   93 expr_op: PLUS â¢

    $default  reduce using rule 93 (expr_op)


State 106

   94 expr_op: SUBTRACT â¢

    $default  reduce using rule 94 (expr_op)


State 107

   92 expr: factor expr_op â¢ expr

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    expr           go to state 144
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 108

   97 factor_op: MULTIPLY â¢

    $default  reduce using rule 97 (factor_op)


State 109

   98 factor_op: DIVIDE â¢

    $default  reduce using rule 98 (factor_op)


State 110

   99 factor_op: POW â¢

    $default  reduce using rule 99 (factor_op)


State 111

   96 factor: term factor_op â¢ factor

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    factor         go to state 145
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 112

  105 id_qualifiers: id_qualifier id_qualifiers â¢

    $default  reduce using rule 105 (id_qualifiers)


State 113

  108 id_qualifier: id â¢
  109             | id â¢ LBRACKET index RBRACKET
  110             | id â¢ UNDERSCORE index COLON index
  111             | id â¢ UNDERSCORE index
  112             | id â¢ LBRACKET index COLON index RBRACKET

    LBRACKET    shift, and go to state 115
    UNDERSCORE  shift, and go to state 116

    $default  reduce using rule 108 (id_qualifier)


State 114

   29 function: id LPAR â¢ param_list RPAR

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    param_list     go to state 146
    chain          go to state 93
    not            go to state 75
    condition      go to state 76
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 115

  109 id_qualifier: id LBRACKET â¢ index RBRACKET
  112             | id LBRACKET â¢ index COLON index RBRACKET

    SUBTRACT  shift, and go to state 147
    INT       shift, and go to state 148

    $default  reduce using rule 122 (index)

    index  go to state 149


State 116

  110 id_qualifier: id UNDERSCORE â¢ index COLON index
  111             | id UNDERSCORE â¢ index

    SUBTRACT  shift, and go to state 147
    INT       shift, and go to state 148

    SUBTRACT  [reduce using rule 122 (index)]
    $default  reduce using rule 122 (index)

    index  go to state 150


State 117

   69 chained_cond: LPAR chain â¢ RPAR
   70             | LPAR chain â¢ RPAR logic_op chained_cond

    RPAR  shift, and go to state 151


State 118

   79 condition: expr â¢
   80          | expr â¢ compare_op condition
   81          | expr â¢ INCLUSIVE num num
   82          | expr â¢ EXCLUSIVE num num
  104 term: LPAR expr â¢ RPAR

    RPAR       shift, and go to state 135
    GT         shift, and go to state 96
    LT         shift, and go to state 97
    GE         shift, and go to state 98
    LE         shift, and go to state 99
    EQ         shift, and go to state 100
    NE         shift, and go to state 101
    INCLUSIVE  shift, and go to state 102
    EXCLUSIVE  shift, and go to state 103

    RPAR      [reduce using rule 79 (condition)]
    $default  reduce using rule 79 (condition)

    compare_op  go to state 104


State 119

   72 chained_cond: chain QUES â¢ chain COLON chain
   73             | chain QUES â¢ chain

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    chain          go to state 152
    not            go to state 75
    condition      go to state 76
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 120

   77 chain: not condition â¢

    $default  reduce using rule 77 (chain)


State 121

   89 logic_op: AND â¢

    $default  reduce using rule 89 (logic_op)


State 122

   90 logic_op: OR â¢

    $default  reduce using rule 90 (logic_op)


State 123

   76 chain: condition logic_op â¢ chain

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    chain          go to state 153
    not            go to state 75
    condition      go to state 76
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 124

   74 chained_cond: id range â¢
  114 range: range â¢ num

    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    $default  reduce using rule 74 (chained_cond)

    num   go to state 154
    int   go to state 67
    real  go to state 68


State 125

  115 range: num â¢

    $default  reduce using rule 115 (range)


State 126

   56 criterion: HISTO id COMMA â¢ DESC comma_sep

    DESC  shift, and go to state 155


State 127

   42 take: TAKE UNION LPAR â¢ id COMMA id RPAR

    ID  shift, and go to state 16

    id  go to state 156


State 128

   45 take_id: id LPAR â¢ id_list RPAR

    ID    shift, and go to state 16
    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    id_list         go to state 157
    id_list_params  go to state 130
    num             go to state 131
    int             go to state 67
    real            go to state 68
    id              go to state 132


State 129

   46 take_id: id id_list â¢

    $default  reduce using rule 46 (take_id)


State 130

   47 id_list: id_list_params â¢
   48        | id_list_params â¢ COMMA id_list

    COMMA  shift, and go to state 158

    $default  reduce using rule 47 (id_list)


State 131

   50 id_list_params: num â¢

    $default  reduce using rule 50 (id_list_params)


State 132

   49 id_list_params: id â¢

    $default  reduce using rule 49 (id_list_params)


State 133

   43 take: COLON UNION LPAR â¢ id COMMA id RPAR

    ID  shift, and go to state 16

    id  go to state 159


State 134

   25 table: TABLE ID TABLETYPE ID NVARS â¢ INT ERRORS boolean tablelist

    INT  shift, and go to state 160


State 135

  104 term: LPAR expr RPAR â¢

    $default  reduce using rule 104 (term)


State 136

   31 function: PIPE int PIPE â¢

    $default  reduce using rule 31 (function)


State 137

   32 function: PIPE real PIPE â¢

    $default  reduce using rule 32 (function)


State 138

   33 function: PIPE id PIPE â¢

    $default  reduce using rule 33 (function)


State 139

   30 function: LCBRACE param_list RCBRACE â¢ id

    ID  shift, and go to state 16

    id  go to state 161


State 140

   34 param_list: chain COMMA â¢ param_list

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    param_list     go to state 162
    chain          go to state 93
    not            go to state 75
    condition      go to state 76
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 141

   81 condition: expr INCLUSIVE num â¢ num

    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    num   go to state 163
    int   go to state 67
    real  go to state 68


State 142

   82 condition: expr EXCLUSIVE num â¢ num

    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    num   go to state 164
    int   go to state 67
    real  go to state 68


State 143

   80 condition: expr compare_op condition â¢

    $default  reduce using rule 80 (condition)


State 144

   92 expr: factor expr_op expr â¢

    $default  reduce using rule 92 (expr)


State 145

   96 factor: term factor_op factor â¢

    $default  reduce using rule 96 (factor)


State 146

   29 function: id LPAR param_list â¢ RPAR

    RPAR  shift, and go to state 165


State 147

  120 index: SUBTRACT â¢ INT

    INT  shift, and go to state 166


State 148

  121 index: INT â¢

    $default  reduce using rule 121 (index)


State 149

  109 id_qualifier: id LBRACKET index â¢ RBRACKET
  112             | id LBRACKET index â¢ COLON index RBRACKET

    RBRACKET  shift, and go to state 167
    COLON     shift, and go to state 168


State 150

  110 id_qualifier: id UNDERSCORE index â¢ COLON index
  111             | id UNDERSCORE index â¢

    COLON  shift, and go to state 169

    COLON     [reduce using rule 111 (id_qualifier)]
    $default  reduce using rule 111 (id_qualifier)


State 151

   69 chained_cond: LPAR chain RPAR â¢
   70             | LPAR chain RPAR â¢ logic_op chained_cond

    AND  shift, and go to state 121
    OR   shift, and go to state 122

    $default  reduce using rule 69 (chained_cond)

    logic_op  go to state 170


State 152

   72 chained_cond: chain QUES chain â¢ COLON chain
   73             | chain QUES chain â¢

    COLON  shift, and go to state 171

    $default  reduce using rule 73 (chained_cond)


State 153

   76 chain: condition logic_op chain â¢

    $default  reduce using rule 76 (chain)


State 154

  114 range: range num â¢

    $default  reduce using rule 114 (range)


State 155

   56 criterion: HISTO id COMMA DESC â¢ comma_sep

    ID        shift, and go to state 16
    PIPE      shift, and go to state 53
    LBRACKET  shift, and go to state 172
    LCBRACE   shift, and go to state 54
    COMMA     shift, and go to state 173
    INT       shift, and go to state 56
    REAL      shift, and go to state 57

    function   go to state 174
    comma_sep  go to state 175
    num        go to state 176
    int        go to state 67
    real       go to state 68
    id         go to state 177


State 156

   42 take: TAKE UNION LPAR id â¢ COMMA id RPAR

    COMMA  shift, and go to state 178


State 157

   45 take_id: id LPAR id_list â¢ RPAR

    RPAR  shift, and go to state 179


State 158

   48 id_list: id_list_params COMMA â¢ id_list

    ID    shift, and go to state 16
    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    id_list         go to state 180
    id_list_params  go to state 130
    num             go to state 131
    int             go to state 67
    real            go to state 68
    id              go to state 132


State 159

   43 take: COLON UNION LPAR id â¢ COMMA id RPAR

    COMMA  shift, and go to state 181


State 160

   25 table: TABLE ID TABLETYPE ID NVARS INT â¢ ERRORS boolean tablelist

    ERRORS  shift, and go to state 182


State 161

   30 function: LCBRACE param_list RCBRACE id â¢

    $default  reduce using rule 30 (function)


State 162

   34 param_list: chain COMMA param_list â¢

    $default  reduce using rule 34 (param_list)


State 163

   81 condition: expr INCLUSIVE num num â¢

    $default  reduce using rule 81 (condition)


State 164

   82 condition: expr EXCLUSIVE num num â¢

    $default  reduce using rule 82 (condition)


State 165

   29 function: id LPAR param_list RPAR â¢

    $default  reduce using rule 29 (function)


State 166

  120 index: SUBTRACT INT â¢

    $default  reduce using rule 120 (index)


State 167

  109 id_qualifier: id LBRACKET index RBRACKET â¢

    $default  reduce using rule 109 (id_qualifier)


State 168

  112 id_qualifier: id LBRACKET index COLON â¢ index RBRACKET

    SUBTRACT  shift, and go to state 147
    INT       shift, and go to state 148

    $default  reduce using rule 122 (index)

    index  go to state 183


State 169

  110 id_qualifier: id UNDERSCORE index COLON â¢ index

    SUBTRACT  shift, and go to state 147
    INT       shift, and go to state 148

    SUBTRACT  [reduce using rule 122 (index)]
    $default  reduce using rule 122 (index)

    index  go to state 184


State 170

   70 chained_cond: LPAR chain RPAR logic_op â¢ chained_cond

    ID       shift, and go to state 16
    LPAR     shift, and go to state 71
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    chained_cond   go to state 185
    chain          go to state 74
    not            go to state 75
    condition      go to state 76
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 77


State 171

   72 chained_cond: chain QUES chain COLON â¢ chain

    ID       shift, and go to state 16
    LPAR     shift, and go to state 52
    NOT      shift, and go to state 72
    PIPE     shift, and go to state 53
    LCBRACE  shift, and go to state 54
    DOT      shift, and go to state 55
    INT      shift, and go to state 56
    REAL     shift, and go to state 57

    function       go to state 58
    chain          go to state 186
    not            go to state 75
    condition      go to state 76
    expr           go to state 60
    factor         go to state 61
    term           go to state 62
    id_qualifiers  go to state 63
    id_qualifier   go to state 64
    dot_op         go to state 65
    num            go to state 66
    int            go to state 67
    real           go to state 68
    id             go to state 69


State 172

   62 comma_sep: LBRACKET â¢ bins RBRACKET comma_sep
   65          | LBRACKET â¢ bins RBRACKET

    INT   shift, and go to state 56
    REAL  shift, and go to state 57

    bins  go to state 187
    num   go to state 188
    int   go to state 67
    real  go to state 68


State 173

   58 comma_sep: COMMA â¢ comma_sep

    ID        shift, and go to state 16
    PIPE      shift, and go to state 53
    LBRACKET  shift, and go to state 172
    LCBRACE   shift, and go to state 54
    COMMA     shift, and go to state 173
    INT       shift, and go to state 56
    REAL      shift, and go to state 57

    function   go to state 174
    comma_sep  go to state 189
    num        go to state 176
    int        go to state 67
    real       go to state 68
    id         go to state 177


State 174

   61 comma_sep: function â¢ comma_sep
   66          | function â¢

    ID        shift, and go to state 16
    PIPE      shift, and go to state 53
    LBRACKET  shift, and go to state 172
    LCBRACE   shift, and go to state 54
    COMMA     shift, and go to state 173
    INT       shift, and go to state 56
    REAL      shift, and go to state 57

    ID        [reduce using rule 66 (comma_sep)]
    $default  reduce using rule 66 (comma_sep)

    function   go to state 174
    comma_sep  go to state 190
    num        go to state 176
    int        go to state 67
    real       go to state 68
    id         go to state 177


State 175

   56 criterion: HISTO id COMMA DESC comma_sep â¢

    $default  reduce using rule 56 (criterion)


State 176

   59 comma_sep: num â¢ comma_sep
   63          | num â¢

    ID        shift, and go to state 16
    PIPE      shift, and go to state 53
    LBRACKET  shift, and go to state 172
    LCBRACE   shift, and go to state 54
    COMMA     shift, and go to state 173
    INT       shift, and go to state 56
    REAL      shift, and go to state 57

    ID        [reduce using rule 63 (comma_sep)]
    $default  reduce using rule 63 (comma_sep)

    function   go to state 174
    comma_sep  go to state 191
    num        go to state 176
    int        go to state 67
    real       go to state 68
    id         go to state 177


State 177

   29 function: id â¢ LPAR param_list RPAR
   60 comma_sep: id â¢ comma_sep
   64          | id â¢

    ID        shift, and go to state 16
    LPAR      shift, and go to state 114
    PIPE      shift, and go to state 53
    LBRACKET  shift, and go to state 172
    LCBRACE   shift, and go to state 54
    COMMA     shift, and go to state 173
    INT       shift, and go to state 56
    REAL      shift, and go to state 57

    ID        [reduce using rule 64 (comma_sep)]
    $default  reduce using rule 64 (comma_sep)

    function   go to state 174
    comma_sep  go to state 192
    num        go to state 176
    int        go to state 67
    real       go to state 68
    id         go to state 177


State 178

   42 take: TAKE UNION LPAR id COMMA â¢ id RPAR

    ID  shift, and go to state 16

    id  go to state 193


State 179

   45 take_id: id LPAR id_list RPAR â¢

    $default  reduce using rule 45 (take_id)


State 180

   48 id_list: id_list_params COMMA id_list â¢

    $default  reduce using rule 48 (id_list)


State 181

   43 take: COLON UNION LPAR id COMMA â¢ id RPAR

    ID  shift, and go to state 16

    id  go to state 194


State 182

   25 table: TABLE ID TABLETYPE ID NVARS INT ERRORS â¢ boolean tablelist

    TRUE   shift, and go to state 195
    FALSE  shift, and go to state 196

    boolean  go to state 197


State 183

  112 id_qualifier: id LBRACKET index COLON index â¢ RBRACKET

    RBRACKET  shift, and go to state 198


State 184

  110 id_qualifier: id UNDERSCORE index COLON index â¢

    $default  reduce using rule 110 (id_qualifier)


State 185

   70 chained_cond: LPAR chain RPAR logic_op chained_cond â¢

    $default  reduce using rule 70 (chained_cond)


State 186

   72 chained_cond: chain QUES chain COLON chain â¢

    $default  reduce using rule 72 (chained_cond)


State 187

   62 comma_sep: LBRACKET bins â¢ RBRACKET comma_sep
   65          | LBRACKET bins â¢ RBRACKET
   67 bins: bins â¢ num

    RBRACKET  shift, and go to state 199
    INT       shift, and go to state 56
    REAL      shift, and go to state 57

    num   go to state 200
    int   go to state 67
    real  go to state 68


State 188

   68 bins: num â¢

    $default  reduce using rule 68 (bins)


State 189

   58 comma_sep: COMMA comma_sep â¢

    $default  reduce using rule 58 (comma_sep)


State 190

   61 comma_sep: function comma_sep â¢

    $default  reduce using rule 61 (comma_sep)


State 191

   59 comma_sep: num comma_sep â¢

    $default  reduce using rule 59 (comma_sep)


State 192

   60 comma_sep: id comma_sep â¢

    $default  reduce using rule 60 (comma_sep)


State 193

   42 take: TAKE UNION LPAR id COMMA id â¢ RPAR

    RPAR  shift, and go to state 201


State 194

   43 take: COLON UNION LPAR id COMMA id â¢ RPAR

    RPAR  shift, and go to state 202


State 195

  116 boolean: TRUE â¢

    $default  reduce using rule 116 (boolean)


State 196

  117 boolean: FALSE â¢

    $default  reduce using rule 117 (boolean)


State 197

   25 table: TABLE ID TABLETYPE ID NVARS INT ERRORS boolean â¢ tablelist

    REAL  shift, and go to state 203

    tablelist  go to state 204
    value      go to state 205


State 198

  112 id_qualifier: id LBRACKET index COLON index RBRACKET â¢

    $default  reduce using rule 112 (id_qualifier)


State 199

   62 comma_sep: LBRACKET bins RBRACKET â¢ comma_sep
   65          | LBRACKET bins RBRACKET â¢

    ID        shift, and go to state 16
    PIPE      shift, and go to state 53
    LBRACKET  shift, and go to state 172
    LCBRACE   shift, and go to state 54
    COMMA     shift, and go to state 173
    INT       shift, and go to state 56
    REAL      shift, and go to state 57

    ID        [reduce using rule 65 (comma_sep)]
    $default  reduce using rule 65 (comma_sep)

    function   go to state 174
    comma_sep  go to state 206
    num        go to state 176
    int        go to state 67
    real       go to state 68
    id         go to state 177


State 200

   67 bins: bins num â¢

    $default  reduce using rule 67 (bins)


State 201

   42 take: TAKE UNION LPAR id COMMA id RPAR â¢

    $default  reduce using rule 42 (take)


State 202

   43 take: COLON UNION LPAR id COMMA id RPAR â¢

    $default  reduce using rule 43 (take)


State 203

   28 value: REAL â¢

    $default  reduce using rule 28 (value)


State 204

   25 table: TABLE ID TABLETYPE ID NVARS INT ERRORS boolean tablelist â¢

    $default  reduce using rule 25 (table)


State 205

   26 tablelist: value â¢ tablelist
   27          | value â¢

    REAL  shift, and go to state 203

    $default  reduce using rule 27 (tablelist)

    tablelist  go to state 207
    value      go to state 205


State 206

   62 comma_sep: LBRACKET bins RBRACKET comma_sep â¢

    $default  reduce using rule 62 (comma_sep)


State 207

   26 tablelist: value tablelist â¢

    $default  reduce using rule 26 (tablelist)
